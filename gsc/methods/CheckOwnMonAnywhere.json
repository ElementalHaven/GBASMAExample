{"names":["CheckOwnMonAnywhere"],"callingMethods":["BeastsCheck","MonCheck"],"methodsCalled":["CheckOwnMon","CloseSRAM","OpenSRAM","UpdateOTPointer"],"methodAddressesUsed":[],"varsSet":[],"varsUsed":["sBoxCount","wCurBox","wPartyCount"],"varAddressesUsed":["BoxAddressTable","sBoxCount","sBoxMon1Species","sBoxMonOT","wPartyMon1Species","wPartyMonOT"],"constantsUsed":["BOXMON_STRUCT_LENGTH","PARTYMON_STRUCT_LENGTH"],"lines":["CheckOwnMonAnywhere:","; Check if the player owns any monsters of the species in wScriptVar.","; It must exist in either party or PC, and have the player\u0027s OT and ID.","","\t; If there are no monsters in the party,","\t; the player must not own any yet.","\tld a, [wPartyCount]","\tand a","\tret z","","\tld d, a","\tld e, 0","\tld hl, wPartyMon1Species","\tld bc, wPartyMonOT","","\t; Run CheckOwnMon on each Pokémon in the party.",".partymon","\tcall CheckOwnMon","\tret c ; found!","","\tpush bc","\tld bc, PARTYMON_STRUCT_LENGTH","\tadd hl, bc","\tpop bc","\tcall UpdateOTPointer","\tdec d","\tjr nz, .partymon","","\t; Run CheckOwnMon on each Pokémon in the PC.","\tld a, BANK(sBoxCount)","\tcall OpenSRAM","\tld a, [sBoxCount]","\tand a","\tjr z, .boxes","","\tld d, a","\tld hl, sBoxMon1Species","\tld bc, sBoxMonOT",".openboxmon","\tcall CheckOwnMon","\tjr nc, .loop","","\t; found!","\tcall CloseSRAM","\tret","",".loop","\tpush bc","\tld bc, BOXMON_STRUCT_LENGTH","\tadd hl, bc","\tpop bc","\tcall UpdateOTPointer","\tdec d","\tjr nz, .openboxmon","","\t; Run CheckOwnMon on each monster in the other 13 PC boxes.",".boxes","\tcall CloseSRAM","","\tld c, 0",".box","\t; Don\u0027t search the current box again.","\tld a, [wCurBox]","\tand $f","\tcp c","\tjr z, .loopbox","","\t; Load the box.","\tld hl, BoxAddressTable","\tld b, 0","\tadd hl, bc","\tadd hl, bc","\tadd hl, bc","\tld a, [hli]","\tcall OpenSRAM","\tld a, [hli]","\tld h, [hl]","\tld l, a","","\t; Number of monsters in the box","\tld a, [hl]","\tand a","\tjr z, .loopbox","","\tpush bc","","\tpush hl","\tld de, sBoxMons - sBoxCount","\tadd hl, de","\tld d, h","\tld e, l","\tpop hl","\tpush de","\tld de, sBoxMonOT - sBoxCount","\tadd hl, de","\tld b, h","\tld c, l","\tpop hl","","\tld d, a","",".boxmon","\tcall CheckOwnMon","\tjr nc, .loopboxmon","","\t; found!","\tpop bc","\tcall CloseSRAM","\tret","",".loopboxmon","\tpush bc","\tld bc, BOXMON_STRUCT_LENGTH","\tadd hl, bc","\tpop bc","\tcall UpdateOTPointer","\tdec d","\tjr nz, .boxmon","\tpop bc","",".loopbox","\tinc c","\tld a, c","\tcp NUM_BOXES","\tjr c, .box","","\t; not found","\tcall CloseSRAM","\tand a","\tret"],"name":"CheckOwnMonAnywhere","file":"engine/pokemon/search.asm","lineNo":48,"address":153790,"addressUsedBy":[]}