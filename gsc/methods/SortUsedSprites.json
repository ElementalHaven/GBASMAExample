{"names":["SortUsedSprites"],"callingMethods":["LoadAndSortSprites"],"methodsCalled":[],"methodAddressesUsed":[],"varsSet":[],"varsUsed":[],"varAddressesUsed":["wUsedSprites"],"constantsUsed":["SPRITE_GFX_LIST_CAPACITY"],"lines":["SortUsedSprites:","; Bubble-sort sprites by type.","","; Run backwards through wUsedSprites to find the last one.","","\tld c, SPRITE_GFX_LIST_CAPACITY","\tld de, wUsedSprites + (SPRITE_GFX_LIST_CAPACITY - 1) * 2",".FindLastSprite:","\tld a, [de]","\tand a","\tjr nz, .FoundLastSprite","\tdec de","\tdec de","\tdec c","\tjr nz, .FindLastSprite",".FoundLastSprite:","\tdec c","\tjr z, .quit","","; If the length of the current sprite is","; higher than a later one, swap them.","","\tinc de","\tld hl, wUsedSprites + 1","",".CheckSprite:","\tpush bc","\tpush de","\tpush hl","",".CheckFollowing:","\tld a, [de]","\tcp [hl]","\tjr nc, .loop","","; Swap the two sprites.","","\tld b, a","\tld a, [hl]","\tld [hl], b","\tld [de], a","\tdec de","\tdec hl","\tld a, [de]","\tld b, a","\tld a, [hl]","\tld [hl], b","\tld [de], a","\tinc de","\tinc hl","","; Keep doing this until everything\u0027s in order.","",".loop","\tdec de","\tdec de","\tdec c","\tjr nz, .CheckFollowing","","\tpop hl","\tinc hl","\tinc hl","\tpop de","\tpop bc","\tdec c","\tjr nz, .CheckSprite","",".quit","\tret"],"name":"SortUsedSprites","file":"engine/overworld/overworld.asm","lineNo":375,"address":89545,"addressUsedBy":[]}