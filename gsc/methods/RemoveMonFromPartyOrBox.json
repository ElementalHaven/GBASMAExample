{"names":["RemoveMonFromPartyOrBox"],"callingMethods":["DepositMonWithDayCareLady","DepositMonWithDayCareMan"],"methodsCalled":["AddNTimes","CloseSRAM","CopyBytes","CopyDataUntil","OpenSRAM","SkipNames"],"methodAddressesUsed":[],"varsSet":[],"varsUsed":["wCurPartyMon","wLinkMode","wPartyCount","wPokemonWithdrawDepositParameter"],"varAddressesUsed":["sBoxCount","sBoxMonNicknames","sBoxMonOT","wPartyCount","wPartyMonNicknames","wPartyMonNicknamesEnd","wPartyMonOT"],"constantsUsed":["BOXMON_STRUCT_LENGTH","MAIL_STRUCT_LENGTH","MONS_PER_BOX","MON_NAME_LENGTH","PARTYMON_STRUCT_LENGTH","PARTY_LENGTH"],"lines":["RemoveMonFromPartyOrBox:","\tld hl, wPartyCount","","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .okay","","\tld a, BANK(sBoxCount)","\tcall OpenSRAM","\tld hl, sBoxCount","",".okay","\tld a, [hl]","\tdec a","\tld [hli], a","\tld a, [wCurPartyMon]","\tld c, a","\tld b, 0","\tadd hl, bc","\tld e, l","\tld d, h","\tinc de",".loop","\tld a, [de]","\tinc de","\tld [hli], a","\tinc a","\tjr nz, .loop","\tld hl, wPartyMonOT","\tld d, PARTY_LENGTH - 1","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party","\tld hl, sBoxMonOT","\tld d, MONS_PER_BOX - 1","",".party","\t; If this is the last mon in our party (box),","\t; shift all the other mons up to close the gap.","\tld a, [wCurPartyMon]","\tcall SkipNames","\tld a, [wCurPartyMon]","\tcp d","\tjr nz, .delete_inside","\tld [hl], -1","\tjp .finish","",".delete_inside","\t; Shift the OT names","\tld d, h","\tld e, l","\tld bc, MON_NAME_LENGTH","\tadd hl, bc","\tld bc, wPartyMonNicknames","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party2","\tld bc, sBoxMonNicknames",".party2","\tcall CopyDataUntil","\t; Shift the struct","\tld hl, wPartyMons","\tld bc, PARTYMON_STRUCT_LENGTH","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party4","\tld hl, sBoxMons","\tld bc, BOXMON_STRUCT_LENGTH",".party4","\tld a, [wCurPartyMon]","\tcall AddNTimes","\tld d, h","\tld e, l","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party5","\tld bc, BOXMON_STRUCT_LENGTH","\tadd hl, bc","\tld bc, sBoxMonOT","\tjr .copy","",".party5","\tld bc, PARTYMON_STRUCT_LENGTH","\tadd hl, bc","\tld bc, wPartyMonOT",".copy","\tcall CopyDataUntil","\t; Shift the nicknames","\tld hl, wPartyMonNicknames","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party6","\tld hl, sBoxMonNicknames",".party6","\tld bc, MON_NAME_LENGTH","\tld a, [wCurPartyMon]","\tcall AddNTimes","\tld d, h","\tld e, l","\tld bc, MON_NAME_LENGTH","\tadd hl, bc","\tld bc, wPartyMonNicknamesEnd","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjr z, .party7","\tld bc, sBoxMonNicknamesEnd",".party7","\tcall CopyDataUntil","\t; Mail time!",".finish","\tld a, [wPokemonWithdrawDepositParameter]","\tand a","\tjp nz, CloseSRAM","\tld a, [wLinkMode]","\tand a","\tret nz","\t; Shift mail","\tld a, BANK(sPartyMail)","\tcall OpenSRAM","\t; If this is the last mon in our party, no need to shift mail.","\tld hl, wPartyCount","\tld a, [wCurPartyMon]","\tcp [hl]","\tjr z, .close_sram","\t; Shift our mail messages up.","\tld hl, sPartyMail","\tld bc, MAIL_STRUCT_LENGTH","\tcall AddNTimes","\tpush hl","\tadd hl, bc","\tpop de","\tld a, [wCurPartyMon]","\tld b, a",".loop2","\tpush bc","\tpush hl","\tld bc, MAIL_STRUCT_LENGTH","\tcall CopyBytes","\tpop hl","\tpush hl","\tld bc, MAIL_STRUCT_LENGTH","\tadd hl, bc","\tpop de","\tpop bc","\tinc b","\tld a, [wPartyCount]","\tcp b","\tjr nz, .loop2",".close_sram","\tjp CloseSRAM"],"name":"RemoveMonFromPartyOrBox","file":"engine/pokemon/move_mon.asm","lineNo":1221,"address":77888,"addressUsedBy":["DoNPCTrade","ReturnShuckle","Function1023c6","MovePKMNWitoutMail_InsertMon","LinkTrade","DepositPokemon","TryWithdrawPokemon","CheckPokeMail","Function11b5c0","BillsPCDepositFuncRelease","BillsPC_Withdraw"]}