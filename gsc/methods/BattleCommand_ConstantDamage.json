{"names":["BattleCommand_ConstantDamage"],"callingMethods":[],"methodsCalled":["BattleCommand_DamageCalc","BattleRandom","Divide","EnemyAttackDamage","GetBattleVar","Multiply","PlayerAttackDamage"],"methodAddressesUsed":[],"varsSet":["hDividend","hDivisor","hMultiplicand","hMultiplier"],"varsUsed":["hBattleTurn","hProduct","hQuotient"],"varAddressesUsed":["FlailReversalPower","wBattleMonHP","wBattleMonLevel","wCurDamage","wEnemyMonHP","wEnemyMonLevel","wEnemyMoveStructPower","wPlayerMoveStructPower"],"constantsUsed":["BATTLE_VARS_MOVE_EFFECT","BATTLE_VARS_MOVE_POWER"],"lines":["BattleCommand_ConstantDamage:","; constantdamage","","\tld hl, wBattleMonLevel","\tldh a, [hBattleTurn]","\tand a","\tjr z, .got_turn","\tld hl, wEnemyMonLevel","",".got_turn","\tld a, BATTLE_VARS_MOVE_EFFECT","\tcall GetBattleVar","\tcp EFFECT_LEVEL_DAMAGE","\tld b, [hl]","\tld a, 0","\tjr z, .got_power","","\tld a, BATTLE_VARS_MOVE_EFFECT","\tcall GetBattleVar","\tcp EFFECT_PSYWAVE","\tjr z, .psywave","","\tcp EFFECT_SUPER_FANG","\tjr z, .super_fang","","\tcp EFFECT_REVERSAL","\tjr z, .reversal","","\tld a, BATTLE_VARS_MOVE_POWER","\tcall GetBattleVar","\tld b, a","\tld a, $0","\tjr .got_power","",".psywave","\tld a, b","\tsrl a","\tadd b","\tld b, a",".psywave_loop","\tcall BattleRandom","\tand a","\tjr z, .psywave_loop","\tcp b","\tjr nc, .psywave_loop","\tld b, a","\tld a, 0","\tjr .got_power","",".super_fang","\tld hl, wEnemyMonHP","\tldh a, [hBattleTurn]","\tand a","\tjr z, .got_hp","\tld hl, wBattleMonHP",".got_hp","\tld a, [hli]","\tsrl a","\tld b, a","\tld a, [hl]","\trr a","\tpush af","\tld a, b","\tpop bc","\tand a","\tjr nz, .got_power","\tor b","\tld a, 0","\tjr nz, .got_power","\tld b, 1","\tjr .got_power","",".got_power","\tld hl, wCurDamage","\tld [hli], a","\tld [hl], b","\tret","",".reversal","\tld hl, wBattleMonHP","\tldh a, [hBattleTurn]","\tand a","\tjr z, .reversal_got_hp","\tld hl, wEnemyMonHP",".reversal_got_hp","\txor a","\tldh [hDividend], a","\tldh [hMultiplicand + 0], a","\tld a, [hli]","\tldh [hMultiplicand + 1], a","\tld a, [hli]","\tldh [hMultiplicand + 2], a","\tld a, 48","\tldh [hMultiplier], a","\tcall Multiply","\tld a, [hli]","\tld b, a","\tld a, [hl]","\tldh [hDivisor], a","\tld a, b","\tand a","\tjr z, .skip_to_divide","","\tldh a, [hProduct + 4]","\tsrl b","\trr a","\tsrl b","\trr a","\tldh [hDivisor], a","\tldh a, [hProduct + 2]","\tld b, a","\tsrl b","\tldh a, [hProduct + 3]","\trr a","\tsrl b","\trr a","\tldh [hDividend + 3], a","\tld a, b","\tldh [hDividend + 2], a","",".skip_to_divide","\tld b, 4","\tcall Divide","\tldh a, [hQuotient + 3]","\tld b, a","\tld hl, FlailReversalPower","",".reversal_loop","\tld a, [hli]","\tcp b","\tjr nc, .break_loop","\tinc hl","\tjr .reversal_loop","",".break_loop","\tldh a, [hBattleTurn]","\tand a","\tld a, [hl]","\tjr nz, .notPlayersTurn","","\tld hl, wPlayerMoveStructPower","\tld [hl], a","\tpush hl","\tcall PlayerAttackDamage","\tjr .notEnemysTurn","",".notPlayersTurn","\tld hl, wEnemyMoveStructPower","\tld [hl], a","\tpush hl","\tcall EnemyAttackDamage","",".notEnemysTurn","\tcall BattleCommand_DamageCalc","\tpop hl","\tld [hl], 1","\tret"],"name":"BattleCommand_ConstantDamage","file":"engine/battle/effect_commands.asm","lineNo":3172,"address":119375,"addressUsedBy":["AIDamageCalc"]}