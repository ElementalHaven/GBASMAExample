{"names":["LearnMove"],"callingMethods":[],"methodsCalled":["AddNTimes","CopyBytes","ForgetMove","GetFarByte","GetMoveName","GetNick","LoadTilemapToTempTilemap","PrintText","YesNoBox"],"methodAddressesUsed":["Text_1_2_and_Poof"],"varsSet":["wDisabledMove","wNamedObjectIndexBuffer","wPlayerDisableCount"],"varsUsed":["wBattleMode","wCurBattleMon","wCurPartyMon","wDisabledMove","wPlayerSubStatus5","wPutativeTMHMMove"],"varAddressesUsed":["DidNotLearnMoveText","LearnedMoveText","Moves","StopLearningMoveText","wBattleMonMoves","wBattleMonPP","wPartyMon1Moves","wPartyMon1PP","wPartyMonNicknames","wStringBuffer1"],"constantsUsed":["MON_MOVES","MON_NAME_LENGTH","MON_PP","MOVE_LENGTH","MOVE_PP","NUM_MOVES","PARTYMON_STRUCT_LENGTH"],"lines":["LearnMove:","\tcall LoadTilemapToTempTilemap","\tld a, [wCurPartyMon]","\tld hl, wPartyMonNicknames","\tcall GetNick","\tld hl, wStringBuffer1","\tld de, wMonOrItemNameBuffer","\tld bc, MON_NAME_LENGTH","\tcall CopyBytes","",".loop","\tld hl, wPartyMon1Moves","\tld bc, PARTYMON_STRUCT_LENGTH","\tld a, [wCurPartyMon]","\tcall AddNTimes","\tld d, h","\tld e, l","\tld b, NUM_MOVES","; Get the first empty move slot.  This routine also serves to","; determine whether the Pokemon learning the moves already has","; all four slots occupied, in which case one would need to be","; deleted.",".next","\tld a, [hl]","\tand a","\tjr z, .learn","\tinc hl","\tdec b","\tjr nz, .next","; If we\u0027re here, we enter the routine for forgetting a move","; to make room for the new move we\u0027re trying to learn.","\tpush de","\tcall ForgetMove","\tpop de","\tjp c, .cancel","","\tpush hl","\tpush de","\tld [wNamedObjectIndexBuffer], a","","\tld b, a","\tld a, [wBattleMode]","\tand a","\tjr z, .not_disabled","\tld a, [wDisabledMove]","\tcp b","\tjr nz, .not_disabled","\txor a","\tld [wDisabledMove], a","\tld [wPlayerDisableCount], a",".not_disabled","","\tcall GetMoveName","\tld hl, Text_1_2_and_Poof ; 1, 2 andâ€¦","\tcall PrintText","\tpop de","\tpop hl","",".learn","\tld a, [wPutativeTMHMMove]","\tld [hl], a","\tld bc, MON_PP - MON_MOVES","\tadd hl, bc","","\tpush hl","\tpush de","\tdec a","\tld hl, Moves + MOVE_PP","\tld bc, MOVE_LENGTH","\tcall AddNTimes","\tld a, BANK(Moves)","\tcall GetFarByte","\tpop de","\tpop hl","","\tld [hl], a","","\tld a, [wBattleMode]","\tand a","\tjp z, .learned","","\tld a, [wCurPartyMon]","\tld b, a","\tld a, [wCurBattleMon]","\tcp b","\tjp nz, .learned","","\tld a, [wPlayerSubStatus5]","\tbit SUBSTATUS_TRANSFORMED, a","\tjp nz, .learned","","\tld h, d","\tld l, e","\tld de, wBattleMonMoves","\tld bc, NUM_MOVES","\tcall CopyBytes","\tld bc, wPartyMon1PP - (wPartyMon1Moves + NUM_MOVES)","\tadd hl, bc","\tld de, wBattleMonPP","\tld bc, NUM_MOVES","\tcall CopyBytes","\tjp .learned","",".cancel","\tld hl, StopLearningMoveText","\tcall PrintText","\tcall YesNoBox","\tjp c, .loop","","\tld hl, DidNotLearnMoveText","\tcall PrintText","\tld b, 0","\tret","",".learned","\tld hl, LearnedMoveText","\tcall PrintText","\tld b, 1","\tret"],"name":"LearnMove","file":"engine/pokemon/learn.asm","lineNo":1,"address":64190,"addressUsedBy":[]}