{"names":["DoPlayerMovement"],"callingMethods":[],"methodsCalled":["CheckIceTile","CheckStandingOnIce","CheckWhirlpoolTile","PlayMapMusic","PlaySFX","WarpCheck"],"methodAddressesUsed":[],"varsSet":["wCurInput","wFacingDirection","wMovementAnimation","wPlayerNextMovement","wPlayerTurningDirection","wWalkingDirection","wWalkingIntoEdgeWarp","wWalkingIntoLand","wWalkingIntoNPC","wWalkingTile","wWalkingX","wWalkingY"],"varsUsed":["hJoyDown","wCurInput","wFacingDirection","wMovementAnimation","wPlayerDirection","wPlayerStandingTile","wPlayerState","wPlayerTurningDirection","wWalkingDirection","wWalkingIntoEdgeWarp","wWalkingIntoLand"],"varAddressesUsed":["wBikeFlags"],"constantsUsed":["DOWN","PLAYERMOVEMENT_CONTINUE","PLAYERMOVEMENT_EXIT_WATER","PLAYERMOVEMENT_FINISH","PLAYERMOVEMENT_FORCE_TURN","PLAYERMOVEMENT_JUMP","PLAYERMOVEMENT_TURN","PLAYERMOVEMENT_WARP","SFX_JUMP_OVER_LEDGE","STEP_BIKE","STEP_ICE","STEP_LEDGE","STEP_TURN","STEP_WALK","TRUE","movement_step_bump","movement_step_sleep"],"lines":["DoPlayerMovement::","","\tcall .GetDPad","\tld a, movement_step_sleep","\tld [wMovementAnimation], a","\txor a","\tld [wWalkingIntoEdgeWarp], a","\tcall .TranslateIntoMovement","\tld c, a","\tld a, [wMovementAnimation]","\tld [wPlayerNextMovement], a","\tret","",".GetDPad:","","\tldh a, [hJoyDown]","\tld [wCurInput], a","","; Standing downhill instead moves down.","","\tld hl, wBikeFlags","\tbit BIKEFLAGS_DOWNHILL_F, [hl]","\tret z","","\tld c, a","\tand D_PAD","\tret nz","","\tld a, c","\tor D_DOWN","\tld [wCurInput], a","\tret","",".TranslateIntoMovement:","\tld a, [wPlayerState]","\tcp PLAYER_NORMAL","\tjr z, .Normal","\tcp PLAYER_SURF","\tjr z, .Surf","\tcp PLAYER_SURF_PIKA","\tjr z, .Surf","\tcp PLAYER_BIKE","\tjr z, .Normal","\tcp PLAYER_SKATE","\tjr z, .Ice","",".Normal:","\tcall .CheckForced","\tcall .GetAction","\tcall .CheckTile","\tret c","\tcall .CheckTurning","\tret c","\tcall .TryStep","\tret c","\tcall .TryJump","\tret c","\tcall .CheckWarp","\tret c","\tjr .NotMoving","",".Surf:","\tcall .CheckForced","\tcall .GetAction","\tcall .CheckTile","\tret c","\tcall .CheckTurning","\tret c","\tcall .TrySurf","\tret c","\tjr .NotMoving","",".Ice:","\tcall .CheckForced","\tcall .GetAction","\tcall .CheckTile","\tret c","\tcall .CheckTurning","\tret c","\tcall .TryStep","\tret c","\tcall .TryJump","\tret c","\tcall .CheckWarp","\tret c","\tld a, [wWalkingDirection]","\tcp STANDING","\tjr z, .HitWall","\tcall .BumpSound",".HitWall:","\tcall .StandInPlace","\txor a","\tret","",".NotMoving:","\tld a, [wWalkingDirection]","\tcp STANDING","\tjr z, .Standing","","; Walking into an edge warp won\u0027t bump.","\tld a, [wWalkingIntoEdgeWarp]","\tand a","\tjr nz, .CantMove","\tcall .BumpSound",".CantMove:","\tcall ._WalkInPlace","\txor a","\tret","",".Standing:","\tcall .StandInPlace","\txor a","\tret","",".CheckTile:","; Tiles such as waterfalls and warps move the player","; in a given direction, overriding input.","","\tld a, [wPlayerStandingTile]","\tld c, a","\tcall CheckWhirlpoolTile","\tjr c, .not_whirlpool","\tld a, PLAYERMOVEMENT_FORCE_TURN","\tscf","\tret","",".not_whirlpool","\tand $f0","\tcp HI_NYBBLE_CURRENT","\tjr z, .water","\tcp HI_NYBBLE_WALK","\tjr z, .land1","\tcp HI_NYBBLE_WALK_ALT","\tjr z, .land2","\tcp HI_NYBBLE_WARPS","\tjr z, .warps","\tjr .no_walk","",".water","\tld a, c","\tmaskbits NUM_DIRECTIONS","\tld c, a","\tld b, 0","\tld hl, .water_table","\tadd hl, bc","\tld a, [hl]","\tld [wWalkingDirection], a","\tjr .continue_walk","",".water_table","\tdb RIGHT ; COLL_WATERFALL_RIGHT","\tdb LEFT  ; COLL_WATERFALL_LEFT","\tdb UP    ; COLL_WATERFALL_UP","\tdb DOWN  ; COLL_WATERFALL","",".land1","\tld a, c","\tand 7","\tld c, a","\tld b, 0","\tld hl, .land1_table","\tadd hl, bc","\tld a, [hl]","\tcp STANDING","\tjr z, .no_walk","\tld [wWalkingDirection], a","\tjr .continue_walk","",".land1_table","\tdb STANDING ; COLL_BRAKE","\tdb RIGHT    ; COLL_WALK_RIGHT","\tdb LEFT     ; COLL_WALK_LEFT","\tdb UP       ; COLL_WALK_UP","\tdb DOWN     ; COLL_WALK_DOWN","\tdb STANDING ; COLL_BRAKE_45","\tdb STANDING ; COLL_BRAKE_46","\tdb STANDING ; COLL_BRAKE_47","",".land2","\tld a, c","\tand 7","\tld c, a","\tld b, 0","\tld hl, .land2_table","\tadd hl, bc","\tld a, [hl]","\tcp STANDING","\tjr z, .no_walk","\tld [wWalkingDirection], a","\tjr .continue_walk","",".land2_table","\tdb RIGHT    ; COLL_WALK_RIGHT_ALT","\tdb LEFT     ; COLL_WALK_LEFT_ALT","\tdb UP       ; COLL_WALK_UP_ALT","\tdb DOWN     ; COLL_WALK_DOWN_ALT","\tdb STANDING ; COLL_BRAKE_ALT","\tdb STANDING ; COLL_BRAKE_55","\tdb STANDING ; COLL_BRAKE_56","\tdb STANDING ; COLL_BRAKE_57","",".warps","\tld a, c","\tcp COLL_DOOR","\tjr z, .down","\tcp COLL_DOOR_79","\tjr z, .down","\tcp COLL_STAIRCASE","\tjr z, .down","\tcp COLL_CAVE","\tjr nz, .no_walk","",".down","\tld a, DOWN","\tld [wWalkingDirection], a","\tjr .continue_walk","",".no_walk","\txor a","\tret","",".continue_walk","\tld a, STEP_WALK","\tcall .DoStep","\tld a, PLAYERMOVEMENT_CONTINUE","\tscf","\tret","",".CheckTurning:","; If the player is turning, change direction first. This also lets","; the player change facing without moving by tapping a direction.","","\tld a, [wPlayerTurningDirection]","\tcp 0","\tjr nz, .not_turning","\tld a, [wWalkingDirection]","\tcp STANDING","\tjr z, .not_turning","","\tld e, a","\tld a, [wPlayerDirection]","\trrca","\trrca","\tmaskbits NUM_DIRECTIONS","\tcp e","\tjr z, .not_turning","","\tld a, STEP_TURN","\tcall .DoStep","\tld a, PLAYERMOVEMENT_TURN","\tscf","\tret","",".not_turning","\txor a","\tret","",".TryStep:","; Surfing actually calls .TrySurf directly instead of passing through here.","\tld a, [wPlayerState]","\tcp PLAYER_SURF","\tjr z, .TrySurf","\tcp PLAYER_SURF_PIKA","\tjr z, .TrySurf","","\tcall .CheckLandPerms","\tjr c, .bump","","\tcall .CheckNPC","\tand a","\tjr z, .bump","\tcp 2","\tjr z, .bump","","\tld a, [wPlayerStandingTile]","\tcall CheckIceTile","\tjr nc, .ice","","; Downhill riding is slower when not moving down.","\tcall .BikeCheck","\tjr nz, .walk","","\tld hl, wBikeFlags","\tbit BIKEFLAGS_DOWNHILL_F, [hl]","\tjr z, .fast","","\tld a, [wWalkingDirection]","\tcp DOWN","\tjr z, .fast","","\tld a, STEP_WALK","\tcall .DoStep","\tscf","\tret","",".fast","\tld a, STEP_BIKE","\tcall .DoStep","\tscf","\tret","",".walk","\tld a, STEP_WALK","\tcall .DoStep","\tscf","\tret","",".ice","\tld a, STEP_ICE","\tcall .DoStep","\tscf","\tret","","; unused","\txor a","\tret","",".bump","\txor a","\tret","",".TrySurf:","\tcall .CheckSurfPerms","\tld [wWalkingIntoLand], a","\tjr c, .surf_bump","","\tcall .CheckNPC","\tld [wWalkingIntoNPC], a","\tand a","\tjr z, .surf_bump","\tcp 2","\tjr z, .surf_bump","","\tld a, [wWalkingIntoLand]","\tand a","\tjr nz, .ExitWater","","\tld a, STEP_WALK","\tcall .DoStep","\tscf","\tret","",".ExitWater:","\tcall .GetOutOfWater","\tcall PlayMapMusic","\tld a, STEP_WALK","\tcall .DoStep","\tld a, PLAYERMOVEMENT_EXIT_WATER","\tscf","\tret","",".surf_bump","\txor a","\tret","",".TryJump:","\tld a, [wPlayerStandingTile]","\tld e, a","\tand $f0","\tcp HI_NYBBLE_LEDGES","\tjr nz, .DontJump","","\tld a, e","\tand 7","\tld e, a","\tld d, 0","\tld hl, .data_8021e","\tadd hl, de","\tld a, [wFacingDirection]","\tand [hl]","\tjr z, .DontJump","","\tld de, SFX_JUMP_OVER_LEDGE","\tcall PlaySFX","\tld a, STEP_LEDGE","\tcall .DoStep","\tld a, PLAYERMOVEMENT_JUMP","\tscf","\tret","",".DontJump:","\txor a","\tret","",".data_8021e","\tdb FACE_RIGHT             ; COLL_HOP_RIGHT","\tdb FACE_LEFT              ; COLL_HOP_LEFT","\tdb FACE_UP                ; COLL_HOP_UP","\tdb FACE_DOWN              ; COLL_HOP_DOWN","\tdb FACE_RIGHT | FACE_DOWN ; COLL_HOP_DOWN_RIGHT","\tdb FACE_DOWN | FACE_LEFT  ; COLL_HOP_DOWN_LEFT","\tdb FACE_UP | FACE_RIGHT   ; COLL_HOP_UP_RIGHT","\tdb FACE_UP | FACE_LEFT    ; COLL_HOP_UP_LEFT","",".CheckWarp:","; Bug: Since no case is made for STANDING here, it will check","; [.edgewarps + $ff]. This resolves to $3e at $8035a.","; This causes wWalkingIntoEdgeWarp to be nonzero when standing on tile $3e,","; making bumps silent.","","\tld a, [wWalkingDirection]","\t; cp STANDING","\t; jr z, .not_warp","\tld e, a","\tld d, 0","\tld hl, .EdgeWarps","\tadd hl, de","\tld a, [wPlayerStandingTile]","\tcp [hl]","\tjr nz, .not_warp","","\tld a, TRUE","\tld [wWalkingIntoEdgeWarp], a","\tld a, [wWalkingDirection]","\t; This is in the wrong place.","\tcp STANDING","\tjr z, .not_warp","","\tld e, a","\tld a, [wPlayerDirection]","\trrca","\trrca","\tmaskbits NUM_DIRECTIONS","\tcp e","\tjr nz, .not_warp","\tcall WarpCheck","\tjr nc, .not_warp","","\tcall .StandInPlace","\tscf","\tld a, PLAYERMOVEMENT_WARP","\tret","",".not_warp","\txor a ; PLAYERMOVEMENT_NORMAL","\tret","",".EdgeWarps:","\tdb COLL_WARP_CARPET_DOWN","\tdb COLL_WARP_CARPET_UP","\tdb COLL_WARP_CARPET_LEFT","\tdb COLL_WARP_CARPET_RIGHT","",".DoStep:","\tld e, a","\tld d, 0","\tld hl, .Steps","\tadd hl, de","\tadd hl, de","\tld a, [hli]","\tld h, [hl]","\tld l, a","","\tld a, [wWalkingDirection]","\tld e, a","\tcp STANDING","\tjp z, .StandInPlace","","\tadd hl, de","\tld a, [hl]","\tld [wMovementAnimation], a","","\tld hl, .FinishFacing","\tadd hl, de","\tld a, [hl]","\tld [wPlayerTurningDirection], a","","\tld a, PLAYERMOVEMENT_FINISH","\tret","",".Steps:","; entries correspond to STEP_* constants","\tdw .SlowStep","\tdw .NormalStep","\tdw .FastStep","\tdw .JumpStep","\tdw .SlideStep","\tdw .TurningStep","\tdw .BackJumpStep","\tdw .FinishFacing","",".SlowStep:","\tslow_step DOWN","\tslow_step UP","\tslow_step LEFT","\tslow_step RIGHT",".NormalStep:","\tstep DOWN","\tstep UP","\tstep LEFT","\tstep RIGHT",".FastStep:","\tbig_step DOWN","\tbig_step UP","\tbig_step LEFT","\tbig_step RIGHT",".JumpStep:","\tjump_step DOWN","\tjump_step UP","\tjump_step LEFT","\tjump_step RIGHT",".SlideStep:","\tfast_slide_step DOWN","\tfast_slide_step UP","\tfast_slide_step LEFT","\tfast_slide_step RIGHT",".BackJumpStep:","\tjump_step UP","\tjump_step DOWN","\tjump_step RIGHT","\tjump_step LEFT",".TurningStep:","\tturn_step DOWN","\tturn_step UP","\tturn_step LEFT","\tturn_step RIGHT",".FinishFacing:","\tdb $80 | DOWN","\tdb $80 | UP","\tdb $80 | LEFT","\tdb $80 | RIGHT","",".StandInPlace:","\tld a, 0","\tld [wPlayerTurningDirection], a","\tld a, movement_step_sleep","\tld [wMovementAnimation], a","\txor a","\tret","","._WalkInPlace:","\tld a, 0","\tld [wPlayerTurningDirection], a","\tld a, movement_step_bump","\tld [wMovementAnimation], a","\txor a","\tret","",".CheckForced:","; When sliding on ice, input is forced to remain in the same direction.","","\tcall CheckStandingOnIce","\tret nc","","\tld a, [wPlayerTurningDirection]","\tcp 0","\tret z","","\tmaskbits NUM_DIRECTIONS","\tld e, a","\tld d, 0","\tld hl, .forced_dpad","\tadd hl, de","\tld a, [wCurInput]","\tand BUTTONS","\tor [hl]","\tld [wCurInput], a","\tret","",".forced_dpad","\tdb D_DOWN, D_UP, D_LEFT, D_RIGHT","",".GetAction:","; Poll player input and update movement info.","","\tld hl, .action_table","\tld de, .action_table_1_end - .action_table_1","\tld a, [wCurInput]","\tbit D_DOWN_F, a","\tjr nz, .d_down","\tbit D_UP_F, a","\tjr nz, .d_up","\tbit D_LEFT_F, a","\tjr nz, .d_left","\tbit D_RIGHT_F, a","\tjr nz, .d_right","; Standing","\tjr .update","",".d_down","\tadd hl, de",".d_up","\tadd hl, de",".d_left","\tadd hl, de",".d_right","\tadd hl, de",".update","\tld a, [hli]","\tld [wWalkingDirection], a","\tld a, [hli]","\tld [wFacingDirection], a","\tld a, [hli]","\tld [wWalkingX], a","\tld a, [hli]","\tld [wWalkingY], a","\tld a, [hli]","\tld h, [hl]","\tld l, a","\tld a, [hl]","\tld [wWalkingTile], a","\tret"],"name":"DoPlayerMovement","file":"engine/overworld/player_movement.asm","lineNo":1,"address":170318,"addressUsedBy":[]}