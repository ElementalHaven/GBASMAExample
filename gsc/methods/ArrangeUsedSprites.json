{"names":["ArrangeUsedSprites"],"callingMethods":["LoadAndSortSprites"],"methodsCalled":["GetSpriteLength"],"methodAddressesUsed":[],"varsSet":[],"varsUsed":[],"varAddressesUsed":["wUsedSprites"],"constantsUsed":["SPRITE_GFX_LIST_CAPACITY"],"lines":["ArrangeUsedSprites:","; Get the length of each sprite and space them out in VRAM.","; Crystal introduces a second table in VRAM bank 0.","","\tld hl, wUsedSprites","\tld c, SPRITE_GFX_LIST_CAPACITY","\tld b, 0",".FirstTableLength:","; Keep going until the end of the list.","\tld a, [hli]","\tand a","\tjr z, .quit","","\tld a, [hl]","\tcall GetSpriteLength","","; Spill over into the second table after $80 tiles.","\tadd b","\tcp $80","\tjr z, .loop","\tjr nc, .SecondTable","",".loop","\tld [hl], b","\tinc hl","\tld b, a","","; Assumes the next table will be reached before c hits 0.","\tdec c","\tjr nz, .FirstTableLength","",".SecondTable:","; The second tile table starts at tile $80.","\tld b, $80","\tdec hl",".SecondTableLength:","; Keep going until the end of the list.","\tld a, [hli]","\tand a","\tjr z, .quit","","\tld a, [hl]","\tcall GetSpriteLength","","; There are only two tables, so don\u0027t go any further than that.","\tadd b","\tjr c, .quit","","\tld [hl], b","\tld b, a","\tinc hl","","\tdec c","\tjr nz, .SecondTableLength","",".quit","\tret"],"name":"ArrangeUsedSprites","file":"engine/overworld/overworld.asm","lineNo":445,"address":89589,"addressUsedBy":[]}