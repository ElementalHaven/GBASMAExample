{"names":["CheckPlayerMoveTypeMatchups"],"callingMethods":["CheckAbleToSwitch"],"methodsCalled":["CheckTypeMatchup","GetMoveAttr","GetMoveByte"],"methodAddressesUsed":[],"varsSet":["wEnemyAISwitchScore","wTypeMatchup"],"varsUsed":["wBattleMonType1","wBattleMonType2","wEnemyAISwitchScore","wTypeMatchup"],"varAddressesUsed":["Moves","wBattleMonType1","wEnemyMonMoves","wEnemyMonType1","wPlayerUsedMoves"],"constantsUsed":["MOVE_POWER","NUM_MOVES"],"lines":["CheckPlayerMoveTypeMatchups:","; Check how well the moves you\u0027ve already used","; fare against the enemy\u0027s Pokemon.  Used to","; score a potential switch.","\tpush hl","\tpush de","\tpush bc","\tld a, 10","\tld [wEnemyAISwitchScore], a","\tld hl, wPlayerUsedMoves","\tld a, [hl]","\tand a","\tjr z, .unknown_moves","","\tld d, NUM_MOVES","\tld e, 0",".loop","\tld a, [hli]","\tand a","\tjr z, .exit","\tpush hl","\tdec a","\tld hl, Moves + MOVE_POWER","\tcall GetMoveAttr","\tand a","\tjr z, .next","","\tinc hl","\tcall GetMoveByte","\tld hl, wEnemyMonType","\tcall CheckTypeMatchup","\tld a, [wTypeMatchup]","\tcp EFFECTIVE + 1 ; 1.0 + 0.1","\tjr nc, .super_effective","\tand a","\tjr z, .next","\tcp EFFECTIVE ; 1.0","\tjr nc, .neutral","",".not_very_effective","\tld a, e","\tcp 1 ; 0.1","\tjr nc, .next","\tld e, 1","\tjr .next","",".neutral","\tld e, 2","\tjr .next","",".super_effective","\tcall .DecreaseScore","\tpop hl","\tjr .done","",".next","\tpop hl","\tdec d","\tjr nz, .loop","",".exit","\tld a, e","\tcp 2","\tjr z, .done","\tcall .IncreaseScore","\tld a, e","\tand a","\tjr nz, .done","\tcall .IncreaseScore","\tjr .done","",".unknown_moves","\tld a, [wBattleMonType1]","\tld b, a","\tld hl, wEnemyMonType1","\tcall CheckTypeMatchup","\tld a, [wTypeMatchup]","\tcp EFFECTIVE + 1 ; 1.0 + 0.1","\tjr c, .ok","\tcall .DecreaseScore",".ok","\tld a, [wBattleMonType2]","\tcp b","\tjr z, .ok2","\tcall CheckTypeMatchup","\tld a, [wTypeMatchup]","\tcp EFFECTIVE + 1 ; 1.0 + 0.1","\tjr c, .ok2","\tcall .DecreaseScore",".ok2","",".done","\tcall .CheckEnemyMoveMatchups","\tpop bc","\tpop de","\tpop hl","\tret","",".CheckEnemyMoveMatchups:","\tld de, wEnemyMonMoves","\tld b, NUM_MOVES + 1","\tld c, 0","","\tld a, [wTypeMatchup]","\tpush af",".loop2","\tdec b","\tjr z, .exit2","","\tld a, [de]","\tand a","\tjr z, .exit2","","\tinc de","\tdec a","\tld hl, Moves + MOVE_POWER","\tcall GetMoveAttr","\tand a","\tjr z, .loop2","","\tinc hl","\tcall GetMoveByte","\tld hl, wBattleMonType1","\tcall CheckTypeMatchup","","\tld a, [wTypeMatchup]","\t; immune","\tand a","\tjr z, .loop2","","\t; not very effective","\tinc c","\tcp EFFECTIVE","\tjr c, .loop2","","\t; neutral","\tinc c","\tinc c","\tinc c","\tinc c","\tinc c","\tcp EFFECTIVE","\tjr z, .loop2","","\t; super effective","\tld c, 100","\tjr .loop2","",".exit2","\tpop af","\tld [wTypeMatchup], a","","\tld a, c","\tand a","\tjr z, .doubledown ; double down","\tcp 5","\tjr c, .DecreaseScore ; down","\tcp 100","\tret c","\tjr .IncreaseScore ; up","",".doubledown","\tcall .DecreaseScore",".DecreaseScore:","\tld a, [wEnemyAISwitchScore]","\tdec a","\tld [wEnemyAISwitchScore], a","\tret","",".IncreaseScore:","\tld a, [wEnemyAISwitchScore]","\tinc a","\tld [wEnemyAISwitchScore], a","\tret"],"name":"CheckPlayerMoveTypeMatchups","file":"engine/battle/ai/switch.asm","lineNo":1,"address":117453,"addressUsedBy":["AI_Smart_PerishSong","AI_Smart_BatonPass","AI_Smart_ForceSwitch","AI_Smart_MeanLook"]}