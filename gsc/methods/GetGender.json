{"names":["GetGender"],"callingMethods":["PlacePartyMonGender"],"methodsCalled":["AddNTimes","CloseSRAM","GetFarByte","OpenSRAM"],"methodAddressesUsed":[],"varsSet":[],"varsUsed":["wCurPartyMon","wCurPartySpecies","wMonType"],"varAddressesUsed":["BaseData","sBoxMon1DVs","wEnemyMonDVs","wOTPartyMon1DVs","wPartyMon1DVs","wTempMonDVs"],"constantsUsed":["BASE_DATA_SIZE","BASE_GENDER","BOXMON_STRUCT_LENGTH","PARTYMON_STRUCT_LENGTH"],"lines":["GetGender:","; Return the gender of a given monster (wCurPartyMon/wCurOTMon/wCurWildMon).","; When calling this function, a should be set to an appropriate wMonType value.","","; return values:","; a \u003d 1: f \u003d nc|nz; male","; a \u003d 0: f \u003d nc|z;  female",";        f \u003d c:  genderless","","; This is determined by comparing the Attack and Speed DVs","; with the species\u0027 gender ratio.","","; Figure out what type of monster struct we\u0027re looking at.","","; 0: PartyMon","\tld hl, wPartyMon1DVs","\tld bc, PARTYMON_STRUCT_LENGTH","\tld a, [wMonType]","\tand a","\tjr z, .PartyMon","","; 1: OTPartyMon","\tld hl, wOTPartyMon1DVs","\tdec a","\tjr z, .PartyMon","","; 2: sBoxMon","\tld hl, sBoxMon1DVs","\tld bc, BOXMON_STRUCT_LENGTH","\tdec a","\tjr z, .sBoxMon","","; 3: Unknown","\tld hl, wTempMonDVs","\tdec a","\tjr z, .DVs","","; else: WildMon","\tld hl, wEnemyMonDVs","\tjr .DVs","","; Get our place in the party/box.","",".PartyMon:",".sBoxMon","\tld a, [wCurPartyMon]","\tcall AddNTimes","",".DVs:","; sBoxMon data is read directly from SRAM.","\tld a, [wMonType]","\tcp BOXMON","\tld a, BANK(sBox)","\tcall z, OpenSRAM","","; Attack DV","\tld a, [hli]","\tand $f0","\tld b, a","; Speed DV","\tld a, [hl]","\tand $f0","\tswap a","","; Put our DVs together.","\tor b","\tld b, a","","; Close SRAM if we were dealing with a sBoxMon.","\tld a, [wMonType]","\tcp BOXMON","\tcall z, CloseSRAM","","; We need the gender ratio to do anything with this.","\tpush bc","\tld a, [wCurPartySpecies]","\tdec a","\tld hl, BaseData + BASE_GENDER","\tld bc, BASE_DATA_SIZE","\tcall AddNTimes","\tpop bc","","\tld a, BANK(BaseData)","\tcall GetFarByte","","; The higher the ratio, the more likely the monster is to be female.","","\tcp GENDER_UNKNOWN","\tjr z, .Genderless","","\tand a ; GENDER_F0?","\tjr z, .Male","","\tcp GENDER_F100","\tjr z, .Female","","; Values below the ratio are male, and vice versa.","\tcp b","\tjr c, .Male","",".Female:","\txor a","\tret","",".Male:","\tld a, 1","\tand a","\tret","",".Genderless:","\tscf","\tret"],"name":"GetGender","file":"engine/pokemon/mon_stats.asm","lineNo":124,"address":161845,"addressUsedBy":["LoveBallMultiplier","Function11b242","StatsScreen_InitUpperHalf","NamingScreen","PCMonInfo","Printer_GetMonGender","DisplayHOFMon","PrintPlayerHUD","CheckOppositeGender","Function1dc52c","CheckTradeGender","DrawEnemyHUD","DayCare_InitBreeding"]}