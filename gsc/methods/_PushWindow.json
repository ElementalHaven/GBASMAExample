{"names":["_PushWindow"],"callingMethods":[],"methodsCalled":["GetMenuBoxDims","MenuBoxCoord2Attr","MenuBoxCoord2Tile"],"methodAddressesUsed":[],"varsSet":["rSVBK"],"varsUsed":["rSVBK","wMenuFlags"],"varAddressesUsed":["wWindowStack","wWindowStackPointer","wWindowStackSize"],"constantsUsed":["SCREEN_WIDTH"],"lines":["_PushWindow::","\tldh a, [rSVBK]","\tpush af","\tld a, BANK(wWindowStack)","\tldh [rSVBK], a","","\tld hl, wWindowStackPointer","\tld e, [hl]","\tinc hl","\tld d, [hl]","\tpush de","","\tld b, wMenuHeaderEnd - wMenuHeader","\tld hl, wMenuHeader",".loop","\tld a, [hli]","\tld [de], a","\tdec de","\tdec b","\tjr nz, .loop","","; If bit 6 or 7 of the menu flags is set, set bit 0 of the address","; at 7:[wWindowStackPointer], and draw the menu using the coordinates from the header.","; Otherwise, reset bit 0 of 7:[wWindowStackPointer].","\tld a, [wMenuFlags]","\tbit 6, a","\tjr nz, .bit_6","\tbit 7, a","\tjr z, .not_bit_7","",".bit_6","\tld hl, wWindowStackPointer","\tld a, [hli]","\tld h, [hl]","\tld l, a","\tset 0, [hl]","\tcall MenuBoxCoord2Tile","\tcall .copy","\tcall MenuBoxCoord2Attr","\tcall .copy","\tjr .done","",".not_bit_7","\tpop hl ; last-pushed register was de","\tpush hl","\tld a, [hld]","\tld l, [hl]","\tld h, a","\tres 0, [hl]","",".done","\tpop hl","\tcall .ret ; empty function","\tld a, h","\tld [de], a","\tdec de","\tld a, l","\tld [de], a","\tdec de","\tld hl, wWindowStackPointer","\tld [hl], e","\tinc hl","\tld [hl], d","","\tpop af","\tldh [rSVBK], a","\tld hl, wWindowStackSize","\tinc [hl]","\tret","",".copy","\tcall GetMenuBoxDims","\tinc b","\tinc c","\tcall .ret ; empty function","",".row","\tpush bc","\tpush hl","",".col","\tld a, [hli]","\tld [de], a","\tdec de","\tdec c","\tjr nz, .col","","\tpop hl","\tld bc, SCREEN_WIDTH","\tadd hl, bc","\tpop bc","\tdec b","\tjr nz, .row","","\tret","",".ret","\tret"],"name":"_PushWindow","file":"engine/menus/menu.asm","lineNo":555,"address":97610,"addressUsedBy":[]}