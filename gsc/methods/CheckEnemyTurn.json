{"names":["CheckEnemyTurn"],"callingMethods":["BattleCommand_CheckTurn","CheckTurn"],"methodsCalled":["BattleCommand_DamageCalc","BattleCommand_LowerSub","BattleCommand_RaiseSub","BattleRandom","CallBattleCore","CantMove","DoEnemyDamage","EndTurn","FarPlayBattleAnimation","GetBattleVar","HitSelfInConfusion","MoveDisabled","PlayFXAnimID","StdBattleTextbox","UpdateEnemyMonInParty"],"methodAddressesUsed":["UpdateEnemyHUD"],"fallsInto":"EndTurn","varsSet":["hBGMapMode","wEnemyDisabledMove","wEnemyMonStatus","wNumHits"],"varsUsed":["wCurEnemyMove","wEnemyDisabledMove","wEnemySubStatus1","wEnemySubStatus3"],"varAddressesUsed":["wCurEnemyMove","wEnemyConfuseCount","wEnemyDisableCount","wEnemyMonStatus","wEnemySubStatus1","wEnemySubStatus3","wEnemySubStatus4"],"constantsUsed":["ANIM_CONFUSED","ANIM_HIT_CONFUSION","ANIM_IN_LOVE","ANIM_SLP","BATTLE_VARS_SUBSTATUS3_OPP","TRUE"],"lines":["CheckEnemyTurn:","\tld hl, wEnemySubStatus4","\tbit SUBSTATUS_RECHARGE, [hl]","\tjr z, .no_recharge","","\tres SUBSTATUS_RECHARGE, [hl]","\tld hl, MustRechargeText","\tcall StdBattleTextbox","\tcall CantMove","\tjp EndTurn","",".no_recharge","","\tld hl, wEnemyMonStatus","\tld a, [hl]","\tand SLP","\tjr z, .not_asleep","","\tdec a","\tld [wEnemyMonStatus], a","\tand a","\tjr z, .woke_up","","\tld hl, FastAsleepText","\tcall StdBattleTextbox","\txor a","\tld [wNumHits], a","\tld de, ANIM_SLP","\tcall FarPlayBattleAnimation","\tjr .fast_asleep","",".woke_up","\tld hl, WokeUpText","\tcall StdBattleTextbox","\tcall CantMove","\tcall UpdateEnemyMonInParty","\tld hl, UpdateEnemyHUD","\tcall CallBattleCore","\tld a, $1","\tldh [hBGMapMode], a","\tld hl, wEnemySubStatus1","\tres SUBSTATUS_NIGHTMARE, [hl]","\tjr .not_asleep","",".fast_asleep","\t; Snore and Sleep Talk bypass sleep.","\tld a, [wCurEnemyMove]","\tcp SNORE","\tjr z, .not_asleep","\tcp SLEEP_TALK","\tjr z, .not_asleep","\tcall CantMove","\tjp EndTurn","",".not_asleep","","\tld hl, wEnemyMonStatus","\tbit FRZ, [hl]","\tjr z, .not_frozen","","\t; Flame Wheel and Sacred Fire thaw the user.","\tld a, [wCurEnemyMove]","\tcp FLAME_WHEEL","\tjr z, .not_frozen","\tcp SACRED_FIRE","\tjr z, .not_frozen","","\tld hl, FrozenSolidText","\tcall StdBattleTextbox","\tcall CantMove","\tjp EndTurn","",".not_frozen","","\tld hl, wEnemySubStatus3","\tbit SUBSTATUS_FLINCHED, [hl]","\tjr z, .not_flinched","","\tres SUBSTATUS_FLINCHED, [hl]","\tld hl, FlinchedText","\tcall StdBattleTextbox","","\tcall CantMove","\tjp EndTurn","",".not_flinched","","\tld hl, wEnemyDisableCount","\tld a, [hl]","\tand a","\tjr z, .not_disabled","","\tdec a","\tld [hl], a","\tand $f","\tjr nz, .not_disabled","","\tld [hl], a","\tld [wEnemyDisabledMove], a","","\tld hl, DisabledNoMoreText","\tcall StdBattleTextbox","",".not_disabled","","\tld a, [wEnemySubStatus3]","\tadd a ; bit SUBSTATUS_CONFUSED","\tjr nc, .not_confused","","\tld hl, wEnemyConfuseCount","\tdec [hl]","\tjr nz, .confused","","\tld hl, wEnemySubStatus3","\tres SUBSTATUS_CONFUSED, [hl]","\tld hl, ConfusedNoMoreText","\tcall StdBattleTextbox","\tjr .not_confused","",".confused","\tld hl, IsConfusedText","\tcall StdBattleTextbox","","\txor a","\tld [wNumHits], a","\tld de, ANIM_CONFUSED","\tcall FarPlayBattleAnimation","","\t; 50% chance of hitting itself","\tcall BattleRandom","\tcp 50 percent + 1","\tjr nc, .not_confused","","\t; clear confusion-dependent substatus","\tld hl, wEnemySubStatus3","\tld a, [hl]","\tand 1 \u003c\u003c SUBSTATUS_CONFUSED","\tld [hl], a","","\tld hl, HurtItselfText","\tcall StdBattleTextbox","","\tcall HitSelfInConfusion","\tcall BattleCommand_DamageCalc","\tcall BattleCommand_LowerSub","","\txor a","\tld [wNumHits], a","","\t; Flicker the monster pic unless flying or underground.","\tld de, ANIM_HIT_CONFUSION","\tld a, BATTLE_VARS_SUBSTATUS3_OPP","\tcall GetBattleVar","\tand 1 \u003c\u003c SUBSTATUS_FLYING | 1 \u003c\u003c SUBSTATUS_UNDERGROUND","\tcall z, PlayFXAnimID","","\tld c, TRUE","\tcall DoEnemyDamage","\tcall BattleCommand_RaiseSub","\tcall CantMove","\tjp EndTurn","",".not_confused","","\tld a, [wEnemySubStatus1]","\tadd a ; bit SUBSTATUS_ATTRACT","\tjr nc, .not_infatuated","","\tld hl, InLoveWithText","\tcall StdBattleTextbox","\txor a","\tld [wNumHits], a","\tld de, ANIM_IN_LOVE","\tcall FarPlayBattleAnimation","","\t; 50% chance of infatuation","\tcall BattleRandom","\tcp 50 percent + 1","\tjr c, .not_infatuated","","\tld hl, InfatuationText","\tcall StdBattleTextbox","\tcall CantMove","\tjp EndTurn","",".not_infatuated","","\t; We can\u0027t disable a move that doesn\u0027t exist.","\tld a, [wEnemyDisabledMove]","\tand a","\tjr z, .no_disabled_move","","\t; Are we using the disabled move?","\tld hl, wCurEnemyMove","\tcp [hl]","\tjr nz, .no_disabled_move","","\tcall MoveDisabled","","\tcall CantMove","\tjp EndTurn","",".no_disabled_move","","\tld hl, wEnemyMonStatus","\tbit PAR, [hl]","\tret z","","\t; 25% chance to be fully paralyzed","\tcall BattleRandom","\tcp 25 percent","\tret nc","","\tld hl, FullyParalyzedText","\tcall StdBattleTextbox","\tcall CantMove","","\t; fallthrough","","EndTurn:"],"name":"CheckEnemyTurn","file":"engine/battle/effect_commands.asm","lineNo":366,"address":116644,"addressUsedBy":[]}