{"names":["_PrintNum"],"callingMethods":[],"methodsCalled":[],"methodAddressesUsed":[],"varsSet":["hPrintNumBuffer"],"varsUsed":["hPrintNumBuffer"],"varAddressesUsed":[],"constantsUsed":[],"lines":["_PrintNum::","; Print c digits of the b-byte value from de to hl.","; Allows 2 to 7 digits. For 1-digit numbers, add","; the value to char \"0\" instead of calling PrintNum.","; The high nybble of the c register specifies how many of the total amount of","; digits will be in front of the decimal point.","; Some extra flags can be given in bits 5-7 of b.","; Bit 5: money if set (unless left-aligned without leading zeros)","; Bit 6: left-aligned if set","; Bit 7: print leading zeros if set","","\tpush bc","","\tbit 5, b","\tjr z, .main","\tbit 7, b","\tjr nz, .moneyflag","\tbit 6, b","\tjr z, .main","",".moneyflag ; 101xxxxx or 011xxxxx","\tld a, \"¥\"","\tld [hli], a","\tres 5, b ; 100xxxxx or 010xxxxx","",".main","\txor a","\tldh [hPrintNumBuffer + 0], a","\tldh [hPrintNumBuffer + 1], a","\tldh [hPrintNumBuffer + 2], a","\tld a, b","\tand $f","\tcp 1","\tjr z, .byte","\tcp 2","\tjr z, .word","; maximum 3 bytes",".long","\tld a, [de]","\tldh [hPrintNumBuffer + 1], a","\tinc de","\tld a, [de]","\tldh [hPrintNumBuffer + 2], a","\tinc de","\tld a, [de]","\tldh [hPrintNumBuffer + 3], a","\tjr .start","",".word","\tld a, [de]","\tldh [hPrintNumBuffer + 2], a","\tinc de","\tld a, [de]","\tldh [hPrintNumBuffer + 3], a","\tjr .start","",".byte","\tld a, [de]","\tldh [hPrintNumBuffer + 3], a","",".start","\tpush de","","\tld d, b","\tld a, c","\tswap a","\tand $f","\tld e, a","\tld a, c","\tand $f","\tld b, a","\tld c, 0","\tcp 2","\tjr z, .two","\tcp 3","\tjr z, .three","\tcp 4","\tjr z, .four","\tcp 5","\tjr z, .five","\tcp 6","\tjr z, .six","",".seven","\tld a, HIGH(1000000 \u003e\u003e 8)","\tldh [hPrintNumBuffer + 4], a","\tld a, HIGH(1000000) ; mid","\tldh [hPrintNumBuffer + 5], a","\tld a, LOW(1000000)","\tldh [hPrintNumBuffer + 6], a","\tcall .PrintDigit","\tcall .AdvancePointer","",".six","\tld a, HIGH(100000 \u003e\u003e 8)","\tldh [hPrintNumBuffer + 4], a","\tld a, HIGH(100000) ; mid","\tldh [hPrintNumBuffer + 5], a","\tld a, LOW(100000)","\tldh [hPrintNumBuffer + 6], a","\tcall .PrintDigit","\tcall .AdvancePointer","",".five","\txor a ; HIGH(10000 \u003e\u003e 8)","\tldh [hPrintNumBuffer + 4], a","\tld a, HIGH(10000) ; mid","\tldh [hPrintNumBuffer + 5], a","\tld a, LOW(10000)","\tldh [hPrintNumBuffer + 6], a","\tcall .PrintDigit","\tcall .AdvancePointer","",".four","\txor a ; HIGH(1000 \u003e\u003e 8)","\tldh [hPrintNumBuffer + 4], a","\tld a, HIGH(1000) ; mid","\tldh [hPrintNumBuffer + 5], a","\tld a, LOW(1000)","\tldh [hPrintNumBuffer + 6], a","\tcall .PrintDigit","\tcall .AdvancePointer","",".three","\txor a ; HIGH(100 \u003e\u003e 8)","\tldh [hPrintNumBuffer + 4], a","\txor a ; HIGH(100) ; mid","\tldh [hPrintNumBuffer + 5], a","\tld a, LOW(100)","\tldh [hPrintNumBuffer + 6], a","\tcall .PrintDigit","\tcall .AdvancePointer","",".two","\tdec e","\tjr nz, .two_skip","\tld a, \"0\"","\tldh [hPrintNumBuffer + 0], a",".two_skip","","\tld c, 0","\tldh a, [hPrintNumBuffer + 3]",".mod_10","\tcp 10","\tjr c, .modded_10","\tsub 10","\tinc c","\tjr .mod_10",".modded_10","","\tld b, a","\tldh a, [hPrintNumBuffer + 0]","\tor c","\tjr nz, .money","\tcall .PrintLeadingZero","\tjr .money_leading_zero","",".money","\tcall .PrintYen","\tpush af","\tld a, \"0\"","\tadd c","\tld [hl], a","\tpop af","\tldh [hPrintNumBuffer + 0], a","\tinc e","\tdec e","\tjr nz, .money_leading_zero","\tinc hl","\tld [hl], \"\u003cDOT\u003e\"","",".money_leading_zero","\tcall .AdvancePointer","\tcall .PrintYen","\tld a, \"0\"","\tadd b","\tld [hli], a","","\tpop de","\tpop bc","\tret","",".PrintYen:","\tpush af","\tldh a, [hPrintNumBuffer + 0]","\tand a","\tjr nz, .stop","\tbit 5, d","\tjr z, .stop","\tld a, \"¥\"","\tld [hli], a","\tres 5, d","",".stop","\tpop af","\tret","",".PrintDigit:","\tdec e","\tjr nz, .ok","\tld a, \"0\"","\tldh [hPrintNumBuffer + 0], a",".ok","\tld c, 0",".loop","\tldh a, [hPrintNumBuffer + 4]","\tld b, a","\tldh a, [hPrintNumBuffer + 1]","\tldh [hPrintNumBuffer + 7], a","\tcp b","\tjr c, .skip1","\tsub b","\tldh [hPrintNumBuffer + 1], a","\tldh a, [hPrintNumBuffer + 5]","\tld b, a","\tldh a, [hPrintNumBuffer + 2]","\tldh [hPrintNumBuffer + 8], a","\tcp b","\tjr nc, .skip2","\tldh a, [hPrintNumBuffer + 1]","\tor 0","\tjr z, .skip3","\tdec a","\tldh [hPrintNumBuffer + 1], a","\tldh a, [hPrintNumBuffer + 2]",".skip2","\tsub b","\tldh [hPrintNumBuffer + 2], a","\tldh a, [hPrintNumBuffer + 6]","\tld b, a","\tldh a, [hPrintNumBuffer + 3]","\tldh [hPrintNumBuffer + 9], a","\tcp b","\tjr nc, .skip4","\tldh a, [hPrintNumBuffer + 2]","\tand a","\tjr nz, .skip5","\tldh a, [hPrintNumBuffer + 1]","\tand a","\tjr z, .skip6","\tdec a","\tldh [hPrintNumBuffer + 1], a","\txor a",".skip5","\tdec a","\tldh [hPrintNumBuffer + 2], a","\tldh a, [hPrintNumBuffer + 3]",".skip4","\tsub b","\tldh [hPrintNumBuffer + 3], a","\tinc c","\tjr .loop",".skip6","\tldh a, [hPrintNumBuffer + 8]","\tldh [hPrintNumBuffer + 2], a",".skip3","\tldh a, [hPrintNumBuffer + 7]","\tldh [hPrintNumBuffer + 1], a",".skip1","\tldh a, [hPrintNumBuffer + 0]","\tor c","\tjr z, .PrintLeadingZero","\tldh a, [hPrintNumBuffer + 0]","\tand a","\tjr nz, .done","\tbit 5, d","\tjr z, .done","\tld a, \"¥\"","\tld [hli], a","\tres 5, d",".done","\tld a, \"0\"","\tadd c","\tld [hl], a","\tldh [hPrintNumBuffer + 0], a","\tinc e","\tdec e","\tret nz","\tinc hl","\tld [hl], \"\u003cDOT\u003e\"","\tret","",".PrintLeadingZero:","; prints a leading zero unless they are turned off in the flags","\tbit 7, d ; print leading zeroes?","\tret z","\tld [hl], \"0\"","\tret","",".AdvancePointer:","; increments the pointer unless leading zeroes are not being printed,","; the number is left-aligned, and no nonzero digits have been printed yet","\tbit 7, d ; print leading zeroes?","\tjr nz, .inc","\tbit 6, d ; left alignment or right alignment?","\tjr z, .inc","\tldh a, [hPrintNumBuffer + 0]","\tand a","\tret z",".inc","\tinc hl","\tret"],"name":"_PrintNum","file":"engine/math/print_num.asm","lineNo":1,"address":73745,"addressUsedBy":[]}