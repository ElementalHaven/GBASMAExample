{"names":["CalcMonStatC"],"callingMethods":["CalcMonStats","GeneratePartyMonStats"],"methodsCalled":["Divide","FarCall","Multiply"],"methodAddressesUsed":["GetSquareRoot"],"varsSet":["hDividend","hDivisor","hMultiplicand","hMultiplier"],"varsUsed":["hProduct","hQuotient","wCurPartyLevel"],"varAddressesUsed":[],"constantsUsed":["MAX_STAT_VALUE","MON_DVS","MON_HP_EXP","STAT_MIN_HP","STAT_MIN_NORMAL"],"lines":["CalcMonStatC:","; \u0027c\u0027 is 1-6 and points to the BaseStat","; 1: HP","; 2: Attack","; 3: Defense","; 4: Speed","; 5: SpAtk","; 6: SpDef","\tpush hl","\tpush de","\tpush bc","\tld a, b","\tld d, a","\tpush hl","\tld hl, wBaseStats","\tdec hl ; has to be decreased, because \u0027c\u0027 begins with 1","\tld b, 0","\tadd hl, bc","\tld a, [hl]","\tld e, a","\tpop hl","\tpush hl","\tld a, c","\tcp STAT_SDEF ; last stat","\tjr nz, .not_spdef","\tdec hl","\tdec hl","",".not_spdef","\tsla c","\tld a, d","\tand a","\tjr z, .no_stat_exp","\tadd hl, bc","\tpush de","\tld a, [hld]","\tld e, a","\tld d, [hl]","\tfarcall GetSquareRoot","\tpop de","",".no_stat_exp","\tsrl c","\tpop hl","\tpush bc","\tld bc, MON_DVS - MON_HP_EXP + 1","\tadd hl, bc","\tpop bc","\tld a, c","\tcp STAT_ATK","\tjr z, .Attack","\tcp STAT_DEF","\tjr z, .Defense","\tcp STAT_SPD","\tjr z, .Speed","\tcp STAT_SATK","\tjr z, .Special","\tcp STAT_SDEF","\tjr z, .Special","; DV_HP \u003d (DV_ATK \u0026 1) \u003c\u003c 3 | (DV_DEF \u0026 1) \u003c\u003c 2 | (DV_SPD \u0026 1) \u003c\u003c 1 | (DV_SPC \u0026 1)","\tpush bc","\tld a, [hl]","\tswap a","\tand 1","\tadd a","\tadd a","\tadd a","\tld b, a","\tld a, [hli]","\tand 1","\tadd a","\tadd a","\tadd b","\tld b, a","\tld a, [hl]","\tswap a","\tand 1","\tadd a","\tadd b","\tld b, a","\tld a, [hl]","\tand 1","\tadd b","\tpop bc","\tjr .GotDV","",".Attack:","\tld a, [hl]","\tswap a","\tand $f","\tjr .GotDV","",".Defense:","\tld a, [hl]","\tand $f","\tjr .GotDV","",".Speed:","\tinc hl","\tld a, [hl]","\tswap a","\tand $f","\tjr .GotDV","",".Special:","\tinc hl","\tld a, [hl]","\tand $f","",".GotDV:","\tld d, 0","\tadd e","\tld e, a","\tjr nc, .no_overflow_1","\tinc d","",".no_overflow_1","\tsla e","\trl d","\tsrl b","\tsrl b","\tld a, b","\tadd e","\tjr nc, .no_overflow_2","\tinc d","",".no_overflow_2","\tldh [hMultiplicand + 2], a","\tld a, d","\tldh [hMultiplicand + 1], a","\txor a","\tldh [hMultiplicand + 0], a","\tld a, [wCurPartyLevel]","\tldh [hMultiplier], a","\tcall Multiply","\tldh a, [hProduct + 1]","\tldh [hDividend + 0], a","\tldh a, [hProduct + 2]","\tldh [hDividend + 1], a","\tldh a, [hProduct + 3]","\tldh [hDividend + 2], a","\tld a, 100","\tldh [hDivisor], a","\tld a, 3","\tld b, a","\tcall Divide","\tld a, c","\tcp STAT_HP","\tld a, STAT_MIN_NORMAL","\tjr nz, .not_hp","\tld a, [wCurPartyLevel]","\tld b, a","\tldh a, [hQuotient + 3]","\tadd b","\tldh [hMultiplicand + 2], a","\tjr nc, .no_overflow_3","\tldh a, [hQuotient + 2]","\tinc a","\tldh [hMultiplicand + 1], a","",".no_overflow_3","\tld a, STAT_MIN_HP","",".not_hp","\tld b, a","\tldh a, [hQuotient + 3]","\tadd b","\tldh [hMultiplicand + 2], a","\tjr nc, .no_overflow_4","\tldh a, [hQuotient + 2]","\tinc a","\tldh [hMultiplicand + 1], a","",".no_overflow_4","\tldh a, [hQuotient + 2]","\tcp HIGH(MAX_STAT_VALUE + 1) + 1","\tjr nc, .max_stat","\tcp HIGH(MAX_STAT_VALUE + 1)","\tjr c, .stat_value_okay","\tldh a, [hQuotient + 3]","\tcp LOW(MAX_STAT_VALUE + 1)","\tjr c, .stat_value_okay","",".max_stat","\tld a, HIGH(MAX_STAT_VALUE)","\tldh [hMultiplicand + 1], a","\tld a, LOW(MAX_STAT_VALUE)","\tldh [hMultiplicand + 2], a","",".stat_value_okay","\tpop bc","\tpop de","\tpop hl","\tret"],"name":"CalcMonStatC","file":"engine/pokemon/move_mon.asm","lineNo":1423,"address":78049,"addressUsedBy":[]}