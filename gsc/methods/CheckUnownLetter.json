{"names":["CheckUnownLetter"],"callingMethods":["LoadEnemyMon"],"methodsCalled":["IsInArray"],"methodAddressesUsed":[],"varsSet":[],"varsUsed":["wUnlockedUnowns","wUnownLetter"],"varAddressesUsed":["UnlockedUnownLetterSets"],"constantsUsed":[],"lines":["CheckUnownLetter:","; Return carry if the Unown letter hasn\u0027t been unlocked yet","","\tld a, [wUnlockedUnowns]","\tld c, a","\tld de, 0","",".loop","","; Don\u0027t check this set unless it\u0027s been unlocked","\tsrl c","\tjr nc, .next","","; Is our letter in the set?","\tld hl, UnlockedUnownLetterSets","\tadd hl, de","\tld a, [hli]","\tld h, [hl]","\tld l, a","","\tpush de","\tld a, [wUnownLetter]","\tld de, 1","\tpush bc","\tcall IsInArray","\tpop bc","\tpop de","","\tjr c, .match","",".next","; Make sure we haven\u0027t gone past the end of the table","\tinc e","\tinc e","\tld a, e","\tcp UnlockedUnownLetterSets.End - UnlockedUnownLetterSets","\tjr c, .loop","","; Hasn\u0027t been unlocked, or the letter is invalid","\tscf","\tret","",".match","; Valid letter","\tand a","\tret"],"name":"CheckUnownLetter","file":"engine/battle/core.asm","lineNo":6442,"address":139296,"addressUsedBy":[]}